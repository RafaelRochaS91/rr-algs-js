{"id":"utils/buildArray.ts","dependencies":[{"name":"/Users/rafarocha91/Desktop/projects/rr-algs-js/tsconfig.json","includedInParent":true,"mtime":1542634461263},{"name":"/Users/rafarocha91/Desktop/projects/rr-algs-js/package.json","includedInParent":true,"mtime":1542632822735},{"name":"faker","loc":{"line":6,"column":38},"parent":"/Users/rafarocha91/Desktop/projects/rr-algs-js/src/utils/buildArray.ts","resolved":"/Users/rafarocha91/Desktop/projects/rr-algs-js/node_modules/faker/index.js"}],"generated":{"js":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar faker_1 = __importDefault(require(\"faker\"));\n\nvar buildNumbersArray = function buildNumbersArray(length) {\n  var array = [];\n  var count = 0;\n\n  while (count < length) {\n    var newElement = faker_1.default.random.number();\n    array.push(newElement);\n    count++;\n  }\n\n  return array;\n};\n\nexports.default = buildNumbersArray;","map":{"mappings":[{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":4}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":11}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":14}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":29}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":30}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":37}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":38}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":45}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":46}},{"source":"utils/buildArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":47}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":15,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":15,"column":4}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":23},"generated":{"line":15,"column":21}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":26},"generated":{"line":15,"column":24}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":15,"column":33}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":26},"generated":{"line":15,"column":50}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":15,"column":51}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":26},"generated":{"line":15,"column":57}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":41},"generated":{"line":15,"column":59}},{"source":"utils/buildArray.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":16,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":4,"column":8},"generated":{"line":16,"column":6}},{"source":"utils/buildArray.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":16,"column":11}},{"source":"utils/buildArray.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":16,"column":14}},{"source":"utils/buildArray.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":16,"column":16}},{"source":"utils/buildArray.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":17,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":17,"column":6}},{"source":"utils/buildArray.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":17,"column":11}},{"source":"utils/buildArray.ts","name":null,"original":{"line":5,"column":22},"generated":{"line":17,"column":14}},{"source":"utils/buildArray.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":17,"column":15}},{"source":"utils/buildArray.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":19,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":7,"column":9},"generated":{"line":19,"column":9}},{"source":"utils/buildArray.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":19,"column":14}},{"source":"utils/buildArray.ts","name":null,"original":{"line":7,"column":17},"generated":{"line":19,"column":17}},{"source":"utils/buildArray.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":19,"column":23}},{"source":"utils/buildArray.ts","name":null,"original":{"line":7,"column":25},"generated":{"line":19,"column":25}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":20,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":20,"column":8}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":20},"generated":{"line":20,"column":18}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":20,"column":21}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":20,"column":28}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":20,"column":29}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":20,"column":36}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":29},"generated":{"line":20,"column":37}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":20,"column":43}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":36},"generated":{"line":20,"column":44}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":20,"column":50}},{"source":"utils/buildArray.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":20,"column":52}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":21,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":21,"column":4}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":21,"column":9}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":21,"column":10}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":21,"column":14}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":21,"column":15}},{"source":"utils/buildArray.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":21,"column":25}},{"source":"utils/buildArray.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":22,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":22,"column":4}},{"source":"utils/buildArray.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":22,"column":9}},{"source":"utils/buildArray.ts","name":null,"original":{"line":11,"column":3},"generated":{"line":23,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":25,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":25,"column":9}},{"source":"utils/buildArray.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":25,"column":14}},{"source":"utils/buildArray.ts","name":null,"original":{"line":13,"column":1},"generated":{"line":26,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":26,"column":1}},{"source":"utils/buildArray.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":28,"column":0}},{"source":"utils/buildArray.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":28,"column":7}},{"source":"utils/buildArray.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":28,"column":8}},{"source":"utils/buildArray.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":28,"column":15}},{"source":"utils/buildArray.ts","name":null,"original":{"line":15,"column":15},"generated":{"line":28,"column":18}},{"source":"utils/buildArray.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":28,"column":35}}],"sources":{"utils/buildArray.ts":"import faker from 'faker';\n\nconst buildNumbersArray = (length: number): number[] => {\n  const array = [];\n  let count: number = 0;\n\n  while (count < length) {\n    const newElement = faker.random.number();\n    array.push(newElement);\n    count++;\n  }\n  return array;\n}\n\nexport default buildNumbersArray;\n"},"lineCount":null}},"hash":"522679c58e9acd33a0790ab1cae67e13","cacheData":{"env":{}}}